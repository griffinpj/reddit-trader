// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package db

import (
	"context"
)

const getUsers = `-- name: GetUsers :many
SELECT id, email, username, password_hash, password_salt, first_name, last_name, display_name, bio, avatar_url, phone_number, is_active, is_verified, role, created_at, updated_at, last_login_at, email_verified_at, password_changed_at FROM users
ORDER BY (first_name || last_name)
`

func (q *Queries) GetUsers(ctx context.Context) ([]User, error) {
	rows, err := q.db.Query(ctx, getUsers)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []User
	for rows.Next() {
		var i User
		if err := rows.Scan(
			&i.ID,
			&i.Email,
			&i.Username,
			&i.PasswordHash,
			&i.PasswordSalt,
			&i.FirstName,
			&i.LastName,
			&i.DisplayName,
			&i.Bio,
			&i.AvatarUrl,
			&i.PhoneNumber,
			&i.IsActive,
			&i.IsVerified,
			&i.Role,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.LastLoginAt,
			&i.EmailVerifiedAt,
			&i.PasswordChangedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
